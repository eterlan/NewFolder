//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity weaponConfigsEntity { get { return GetGroup(ConfigMatcher.WeaponConfigs).GetSingleEntity(); } }
    public ECS.Config.WeaponConfigsComponent weaponConfigs { get { return weaponConfigsEntity.weaponConfigs; } }
    public bool hasWeaponConfigs { get { return weaponConfigsEntity != null; } }

    public ConfigEntity SetWeaponConfigs(ECS.Config.WeaponConfigs newValue, UnityEngine.Sprite[] newSprites) {
        if (hasWeaponConfigs) {
            throw new Entitas.EntitasException("Could not set WeaponConfigs!\n" + this + " already has an entity with ECS.Config.WeaponConfigsComponent!",
                "You should check if the context already has a weaponConfigsEntity before setting it or use context.ReplaceWeaponConfigs().");
        }
        var entity = CreateEntity();
        entity.AddWeaponConfigs(newValue, newSprites);
        return entity;
    }

    public void ReplaceWeaponConfigs(ECS.Config.WeaponConfigs newValue, UnityEngine.Sprite[] newSprites) {
        var entity = weaponConfigsEntity;
        if (entity == null) {
            entity = SetWeaponConfigs(newValue, newSprites);
        } else {
            entity.ReplaceWeaponConfigs(newValue, newSprites);
        }
    }

    public void RemoveWeaponConfigs() {
        weaponConfigsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public ECS.Config.WeaponConfigsComponent weaponConfigs { get { return (ECS.Config.WeaponConfigsComponent)GetComponent(ConfigComponentsLookup.WeaponConfigs); } }
    public bool hasWeaponConfigs { get { return HasComponent(ConfigComponentsLookup.WeaponConfigs); } }

    public void AddWeaponConfigs(ECS.Config.WeaponConfigs newValue, UnityEngine.Sprite[] newSprites) {
        var index = ConfigComponentsLookup.WeaponConfigs;
        var component = (ECS.Config.WeaponConfigsComponent)CreateComponent(index, typeof(ECS.Config.WeaponConfigsComponent));
        component.value = newValue;
        component.sprites = newSprites;
        AddComponent(index, component);
    }

    public void ReplaceWeaponConfigs(ECS.Config.WeaponConfigs newValue, UnityEngine.Sprite[] newSprites) {
        var index = ConfigComponentsLookup.WeaponConfigs;
        var component = (ECS.Config.WeaponConfigsComponent)CreateComponent(index, typeof(ECS.Config.WeaponConfigsComponent));
        component.value = newValue;
        component.sprites = newSprites;
        ReplaceComponent(index, component);
    }

    public void RemoveWeaponConfigs() {
        RemoveComponent(ConfigComponentsLookup.WeaponConfigs);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherWeaponConfigs;

    public static Entitas.IMatcher<ConfigEntity> WeaponConfigs {
        get {
            if (_matcherWeaponConfigs == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.WeaponConfigs);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherWeaponConfigs = matcher;
            }

            return _matcherWeaponConfigs;
        }
    }
}
