//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ECS.Components.Equipment equipment { get { return (ECS.Components.Equipment)GetComponent(GameComponentsLookup.Equipment); } }
    public bool hasEquipment { get { return HasComponent(GameComponentsLookup.Equipment); } }

    public void AddEquipment(System.Collections.Generic.List<int> newEquipmentIDList) {
        var index = GameComponentsLookup.Equipment;
        var component = (ECS.Components.Equipment)CreateComponent(index, typeof(ECS.Components.Equipment));
        component.equipmentIDList = newEquipmentIDList;
        AddComponent(index, component);
    }

    public void ReplaceEquipment(System.Collections.Generic.List<int> newEquipmentIDList) {
        var index = GameComponentsLookup.Equipment;
        var component = (ECS.Components.Equipment)CreateComponent(index, typeof(ECS.Components.Equipment));
        component.equipmentIDList = newEquipmentIDList;
        ReplaceComponent(index, component);
    }

    public void RemoveEquipment() {
        RemoveComponent(GameComponentsLookup.Equipment);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEquipment;

    public static Entitas.IMatcher<GameEntity> Equipment {
        get {
            if (_matcherEquipment == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Equipment);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEquipment = matcher;
            }

            return _matcherEquipment;
        }
    }
}
