//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ECS.C.MonoMapper monoMapper { get { return (ECS.C.MonoMapper)GetComponent(GameComponentsLookup.MonoMapper); } }
    public bool hasMonoMapper { get { return HasComponent(GameComponentsLookup.MonoMapper); } }

    public void AddMonoMapper(System.Collections.Generic.Dictionary<string, UnityEngine.Component> newMapper) {
        var index = GameComponentsLookup.MonoMapper;
        var component = (ECS.C.MonoMapper)CreateComponent(index, typeof(ECS.C.MonoMapper));
        component.mapper = newMapper;
        AddComponent(index, component);
    }

    public void ReplaceMonoMapper(System.Collections.Generic.Dictionary<string, UnityEngine.Component> newMapper) {
        var index = GameComponentsLookup.MonoMapper;
        var component = (ECS.C.MonoMapper)CreateComponent(index, typeof(ECS.C.MonoMapper));
        component.mapper = newMapper;
        ReplaceComponent(index, component);
    }

    public void RemoveMonoMapper() {
        RemoveComponent(GameComponentsLookup.MonoMapper);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMonoMapper;

    public static Entitas.IMatcher<GameEntity> MonoMapper {
        get {
            if (_matcherMonoMapper == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MonoMapper);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMonoMapper = matcher;
            }

            return _matcherMonoMapper;
        }
    }
}
