//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity tagPlayerEntity { get { return GetGroup(GameMatcher.TagPlayer).GetSingleEntity(); } }

    public bool isTagPlayer {
        get { return tagPlayerEntity != null; }
        set {
            var entity = tagPlayerEntity;
            if (value != (entity != null)) {
                if (value) {
                    CreateEntity().isTagPlayer = true;
                } else {
                    entity.Destroy();
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    static readonly ECS.Components.TagPlayer tagPlayerComponent = new ECS.Components.TagPlayer();

    public bool isTagPlayer {
        get { return HasComponent(GameComponentsLookup.TagPlayer); }
        set {
            if (value != isTagPlayer) {
                var index = GameComponentsLookup.TagPlayer;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : tagPlayerComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTagPlayer;

    public static Entitas.IMatcher<GameEntity> TagPlayer {
        get {
            if (_matcherTagPlayer == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TagPlayer);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTagPlayer = matcher;
            }

            return _matcherTagPlayer;
        }
    }
}
