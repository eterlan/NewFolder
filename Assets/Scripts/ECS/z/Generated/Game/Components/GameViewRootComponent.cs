//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity viewRootEntity { get { return GetGroup(GameMatcher.ViewRoot).GetSingleEntity(); } }
    public ECS.C.ViewRoot viewRoot { get { return viewRootEntity.viewRoot; } }
    public bool hasViewRoot { get { return viewRootEntity != null; } }

    public GameEntity SetViewRoot(UnityEngine.Transform newPosition) {
        if (hasViewRoot) {
            throw new Entitas.EntitasException("Could not set ViewRoot!\n" + this + " already has an entity with ECS.C.ViewRoot!",
                "You should check if the context already has a viewRootEntity before setting it or use context.ReplaceViewRoot().");
        }
        var entity = CreateEntity();
        entity.AddViewRoot(newPosition);
        return entity;
    }

    public void ReplaceViewRoot(UnityEngine.Transform newPosition) {
        var entity = viewRootEntity;
        if (entity == null) {
            entity = SetViewRoot(newPosition);
        } else {
            entity.ReplaceViewRoot(newPosition);
        }
    }

    public void RemoveViewRoot() {
        viewRootEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ECS.C.ViewRoot viewRoot { get { return (ECS.C.ViewRoot)GetComponent(GameComponentsLookup.ViewRoot); } }
    public bool hasViewRoot { get { return HasComponent(GameComponentsLookup.ViewRoot); } }

    public void AddViewRoot(UnityEngine.Transform newPosition) {
        var index = GameComponentsLookup.ViewRoot;
        var component = (ECS.C.ViewRoot)CreateComponent(index, typeof(ECS.C.ViewRoot));
        component.position = newPosition;
        AddComponent(index, component);
    }

    public void ReplaceViewRoot(UnityEngine.Transform newPosition) {
        var index = GameComponentsLookup.ViewRoot;
        var component = (ECS.C.ViewRoot)CreateComponent(index, typeof(ECS.C.ViewRoot));
        component.position = newPosition;
        ReplaceComponent(index, component);
    }

    public void RemoveViewRoot() {
        RemoveComponent(GameComponentsLookup.ViewRoot);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherViewRoot;

    public static Entitas.IMatcher<GameEntity> ViewRoot {
        get {
            if (_matcherViewRoot == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ViewRoot);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherViewRoot = matcher;
            }

            return _matcherViewRoot;
        }
    }
}
