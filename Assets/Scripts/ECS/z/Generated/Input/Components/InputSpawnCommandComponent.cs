//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity spawnCommandEntity { get { return GetGroup(InputMatcher.SpawnCommand).GetSingleEntity(); } }
    public ECS.C.SpawnCommand spawnCommand { get { return spawnCommandEntity.spawnCommand; } }
    public bool hasSpawnCommand { get { return spawnCommandEntity != null; } }

    public InputEntity SetSpawnCommand(int newCount) {
        if (hasSpawnCommand) {
            throw new Entitas.EntitasException("Could not set SpawnCommand!\n" + this + " already has an entity with ECS.C.SpawnCommand!",
                "You should check if the context already has a spawnCommandEntity before setting it or use context.ReplaceSpawnCommand().");
        }
        var entity = CreateEntity();
        entity.AddSpawnCommand(newCount);
        return entity;
    }

    public void ReplaceSpawnCommand(int newCount) {
        var entity = spawnCommandEntity;
        if (entity == null) {
            entity = SetSpawnCommand(newCount);
        } else {
            entity.ReplaceSpawnCommand(newCount);
        }
    }

    public void RemoveSpawnCommand() {
        spawnCommandEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public ECS.C.SpawnCommand spawnCommand { get { return (ECS.C.SpawnCommand)GetComponent(InputComponentsLookup.SpawnCommand); } }
    public bool hasSpawnCommand { get { return HasComponent(InputComponentsLookup.SpawnCommand); } }

    public void AddSpawnCommand(int newCount) {
        var index = InputComponentsLookup.SpawnCommand;
        var component = (ECS.C.SpawnCommand)CreateComponent(index, typeof(ECS.C.SpawnCommand));
        component.count = newCount;
        AddComponent(index, component);
    }

    public void ReplaceSpawnCommand(int newCount) {
        var index = InputComponentsLookup.SpawnCommand;
        var component = (ECS.C.SpawnCommand)CreateComponent(index, typeof(ECS.C.SpawnCommand));
        component.count = newCount;
        ReplaceComponent(index, component);
    }

    public void RemoveSpawnCommand() {
        RemoveComponent(InputComponentsLookup.SpawnCommand);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherSpawnCommand;

    public static Entitas.IMatcher<InputEntity> SpawnCommand {
        get {
            if (_matcherSpawnCommand == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.SpawnCommand);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherSpawnCommand = matcher;
            }

            return _matcherSpawnCommand;
        }
    }
}
